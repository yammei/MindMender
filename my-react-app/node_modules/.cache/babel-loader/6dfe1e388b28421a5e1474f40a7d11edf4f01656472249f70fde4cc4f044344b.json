{"ast":null,"code":"var _jsxFileName = \"/Users/evelynzhang/Documents/mind-mender/my-react-app/src/Scores.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scores = ({\n  userId,\n  isLoggedIn\n}) => {\n  _s();\n  const [scores, setScores] = useState([]);\n  const [scores2, setScores2] = useState([]);\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    // Retrieve username from localStorage\n    const storedUsername = localStorage.getItem('username');\n    const storedUserId = localStorage.getItem('userId');\n    console.log('Stored UserId:', storedUserId);\n    setUsername(storedUsername);\n    const fetchScores = async () => {\n      try {\n        const response = await axios.get(`http://localhost:4000/api/getscore/${storedUserId}`);\n        const response2 = await axios.get(`http://localhost:4000/api/getscore2/${storedUserId}`);\n        console.log('Response from getScore API:', response.data);\n        console.log('Response from getScore2 API:', response2.data);\n        setScores([response.data.score]);\n        setScores2([response2.data.score]); // Check the structure of response2.data\n      } catch (error) {\n        console.error('Error fetching scores:', error);\n      }\n    };\n    if (storedUserId) {\n      fetchScores();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Scores-Container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"Scores-User\",\n      children: `${username}'s Scores`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), scores.map((score, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Happiness: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Scores-Fraction-Text\",\n        children: \" of 50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 49\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), scores2.map((score, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Social Self Care: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Scores-Fraction-Text\",\n        children: \" of 30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 56\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Scores, \"grdi6Y6pyz8MqZTbv+vffIuKVd0=\");\n_c = Scores;\nexport default Scores;\nvar _c;\n$RefreshReg$(_c, \"Scores\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Scores","userId","isLoggedIn","_s","scores","setScores","scores2","setScores2","username","setUsername","storedUsername","localStorage","getItem","storedUserId","console","log","fetchScores","response","get","response2","data","score","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["/Users/evelynzhang/Documents/mind-mender/my-react-app/src/Scores.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Scores = ({ userId, isLoggedIn }) => {\r\n  const [scores, setScores] = useState([]);\r\n  const [scores2, setScores2] = useState([]);\r\n  const [username, setUsername] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Retrieve username from localStorage\r\n    const storedUsername = localStorage.getItem('username');\r\n    const storedUserId = localStorage.getItem('userId');\r\n    console.log('Stored UserId:', storedUserId);\r\n    setUsername(storedUsername);\r\n\r\n    const fetchScores = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:4000/api/getscore/${storedUserId}`);\r\n        const response2 = await axios.get(`http://localhost:4000/api/getscore2/${storedUserId}`);\r\n        console.log('Response from getScore API:', response.data);\r\n        console.log('Response from getScore2 API:', response2.data);\r\n        setScores([response.data.score]);\r\n        setScores2([response2.data.score]);  // Check the structure of response2.data\r\n      } catch (error) {\r\n        console.error('Error fetching scores:', error);\r\n      }\r\n    };\r\n\r\n    if (storedUserId) {\r\n      fetchScores();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className='Scores-Container'>\r\n\r\n      <p className='Scores-User'>{`${username}'s Scores`}</p>\r\n\r\n      {scores.map((score, index) => (\r\n        <p key={index}>Happiness: <b>{score}</b><span className='Scores-Fraction-Text'> of 50</span></p>\r\n      ))}\r\n\r\n      {scores2.map((score, index) => (\r\n        <p key={index}>Social Self Care: <b>{score}</b><span className='Scores-Fraction-Text'> of 30</span></p>\r\n      ))}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scores;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}