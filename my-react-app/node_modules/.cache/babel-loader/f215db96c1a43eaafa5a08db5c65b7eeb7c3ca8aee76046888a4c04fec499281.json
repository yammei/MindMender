{"ast":null,"code":"var _jsxFileName = \"/Users/evelynzhang/Documents/mind-mender/my-react-app/src/LineGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineGraph = props => {\n  const data = [{\n    y: 0\n  }, {\n    y: 50\n  }, {\n    y: 65\n  }, {\n    y: 100\n  }];\n  const size = [250, 250]; // (x, y) or (width, height)\n  const sections = 4; // Number of entries.\n  const scoreRange = [0, 50]; // (Minimum Score, Maximum Score)\n\n  const rowStyle = {\n    display: 'flex',\n    flexDirection: 'row'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"LineGraph-Container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LineGraph-Background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LineGraph-Content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"LineGraph-Content-Row-1\",\n          style: {\n            height: `${size[1]}px`,\n            flex: '15%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(LineGraphScores, {\n            scoreRange: scoreRange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LineGraph-Display\",\n            children: /*#__PURE__*/_jsxDEV(LineGraphComponent, {\n              data: data,\n              size: size,\n              section: sections\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"LineGraph-Content-Row-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LineGraph-Dates\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"DD/MM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"DD/MM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"DD/MM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"DD/MM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = LineGraph;\nconst LineGraphComponent = props => {\n  _s();\n  const canvasRef = useRef(null);\n  const width = props.size[0];\n  const height = props.size[0];\n  const sections = props.sections;\n  const intervals = width / (sections - 1);\n  const incomingData = props.data;\n  const lineGraphStyle = {\n    width: `${width}`,\n    border: '1px solid #ccc'\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    var outgoingData = incomingData.map((entry, index) => ({\n      x: index * intervals,\n      y: height - entry.y\n    }));\n\n    //   const maxY = Math.max(...outgoingData.map(entry => entry.y));\n    //   console.log(`Max Number: ${maxY}`);\n\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n    ctx.moveTo(outgoingData[0].x, outgoingData[0].y);\n    for (let i = 1; i < outgoingData.length; i++) {\n      ctx.lineTo(outgoingData[i].x, outgoingData[i].y);\n    }\n    ctx.strokeStyle = 'red';\n    ctx.lineWidth = 5;\n    ctx.stroke();\n  }, [width, height, intervals, incomingData]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: height,\n    style: lineGraphStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 12\n  }, this);\n};\n_s(LineGraphComponent, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c2 = LineGraphComponent;\nconst LineGraphScores = props => {\n  const scoreRange = props.scoreRange;\n  const scoreRangeMax = Math.max(...scoreRange);\n  const scoreRangeMin = Math.min(...scoreRange);\n  const scoreInterval = (scoreRangeMax - scoreRangeMin) / 5;\n  return /*#__PURE__*/_jsxDEV(LineGraphScoresStyled, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"LineGraphScoreTop\",\n      children: scoreRangeMax\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: scoreInterval * 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: scoreInterval * 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: scoreInterval * 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: scoreInterval * 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"LineGraphScoreBottom\",\n      children: scoreRangeMin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_c3 = LineGraphScores;\nconst LineGraphScoresStyled = styled.div`\n    flex: 0 0 15%;\n    background-color: pink;\n    p {\n        text-align: right;\n        margin: 20px 0px;\n    }\n    #LineGraphScoreTop {\n        margin-top: 0px;\n    }\n    #LineGraphScoreBottom {\n        margin-bottom: 0px;\n    }\n`;\n_c4 = LineGraphScoresStyled;\nexport default LineGraph;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"LineGraph\");\n$RefreshReg$(_c2, \"LineGraphComponent\");\n$RefreshReg$(_c3, \"LineGraphScores\");\n$RefreshReg$(_c4, \"LineGraphScoresStyled\");","map":{"version":3,"names":["React","useEffect","useRef","styled","jsxDEV","_jsxDEV","LineGraph","props","data","y","size","sections","scoreRange","rowStyle","display","flexDirection","id","children","className","style","height","flex","LineGraphScores","fileName","_jsxFileName","lineNumber","columnNumber","LineGraphComponent","section","_c","_s","canvasRef","width","intervals","incomingData","lineGraphStyle","border","canvas","current","ctx","getContext","outgoingData","map","entry","index","x","clearRect","beginPath","moveTo","i","length","lineTo","strokeStyle","lineWidth","stroke","ref","_c2","scoreRangeMax","Math","max","scoreRangeMin","min","scoreInterval","LineGraphScoresStyled","_c3","div","_c4","$RefreshReg$"],"sources":["/Users/evelynzhang/Documents/mind-mender/my-react-app/src/LineGraph.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst LineGraph = (props) => {\n\n    const data = [\n        {y: 0},\n        {y: 50},\n        {y: 65},\n        {y: 100},\n    ];\n    const size = [250, 250]; // (x, y) or (width, height)\n    const sections = 4; // Number of entries.\n    const scoreRange = [0, 50]; // (Minimum Score, Maximum Score)\n\n    const rowStyle = {\n        display: 'flex',\n        flexDirection: 'row',\n    };\n\n    return (\n        <div id=\"LineGraph-Container\">\n            <div className=\"LineGraph-Background\">\n            <div className=\"LineGraph-Content\">\n                <div className=\"LineGraph-Content-Row-1\" style={{height: `${size[1]}px`, flex: '15%'}}>\n                    <LineGraphScores scoreRange={scoreRange}/>\n                <div className=\"LineGraph-Display\">\n                    <LineGraphComponent data={data} size={size} section={sections}/>\n                </div>\n                </div>\n                <div className=\"LineGraph-Content-Row-2\">\n                <div className=\"LineGraph-Dates\">\n                    <p>DD/MM</p>\n                    <p>DD/MM</p>\n                    <p>DD/MM</p>\n                    <p>DD/MM</p>\n                </div>\n                </div>\n            </div>\n            </div>\n        </div>\n    );\n};\n\nconst LineGraphComponent = (props) => {\n    const canvasRef = useRef(null);\n    const width = props.size[0];\n    const height = props.size[0];\n    const sections = props.sections;\n    const intervals = width / (sections - 1);\n    const incomingData = props.data;\n\n    const lineGraphStyle = {\n      width: `${width}`,\n      border: '1px solid #ccc',\n    };\n\n    useEffect(() => {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      var outgoingData = incomingData.map((entry, index) => ({\n        x: index * intervals,\n        y: height - entry.y,\n      }));\n\n    //   const maxY = Math.max(...outgoingData.map(entry => entry.y));\n    //   console.log(`Max Number: ${maxY}`);\n\n      ctx.clearRect(0, 0, width, height);\n      ctx.beginPath();\n      ctx.moveTo(outgoingData[0].x, outgoingData[0].y);\n\n      for (let i = 1; i < outgoingData.length; i++) {\n        ctx.lineTo(outgoingData[i].x, outgoingData[i].y);\n      }\n\n      ctx.strokeStyle = 'red';\n      ctx.lineWidth = 5;\n      ctx.stroke();\n    }, [width, height, intervals, incomingData]);\n\n    return <canvas ref={canvasRef} width={width} height={height} style={lineGraphStyle} />;\n  };\n\nconst LineGraphScores = (props) => {\n\n    const scoreRange = props.scoreRange;\n    const scoreRangeMax = Math.max(...scoreRange);\n    const scoreRangeMin = Math.min(...scoreRange);\n    const scoreInterval = (scoreRangeMax-scoreRangeMin)/5\n\n    return (\n        <LineGraphScoresStyled>\n            <p id='LineGraphScoreTop'>{scoreRangeMax}</p>\n            <p>{scoreInterval*4}</p>\n            <p>{scoreInterval*3}</p>\n            <p>{scoreInterval*2}</p>\n            <p>{scoreInterval*1}</p>\n            <p id='LineGraphScoreBottom'>{scoreRangeMin}</p>\n        </LineGraphScoresStyled>\n    );\n};\n\nconst LineGraphScoresStyled = styled.div`\n    flex: 0 0 15%;\n    background-color: pink;\n    p {\n        text-align: right;\n        margin: 20px 0px;\n    }\n    #LineGraphScoreTop {\n        margin-top: 0px;\n    }\n    #LineGraphScoreBottom {\n        margin-bottom: 0px;\n    }\n`;\n\nexport default LineGraph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}