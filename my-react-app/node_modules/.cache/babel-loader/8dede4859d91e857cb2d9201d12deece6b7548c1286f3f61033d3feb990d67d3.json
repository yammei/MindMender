{"ast":null,"code":"var _jsxFileName = \"/Users/evelynzhang/Documents/mind-mender/my-react-app/src/LineGraph.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineGraphComponent = props => {\n  _s();\n  const canvasRef = useRef(null);\n  const width = 250;\n  const height = 250;\n  const sections = 4;\n  const intervals = width / (sections - 1);\n  const incomingData = props.data;\n  const lineGraphStyle = {\n    width: `${width}`,\n    border: '1px solid #ccc'\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Initialize outgoingData with the correct y values\n    var outgoingData = incomingData.map((entry, index) => ({\n      x: index * intervals,\n      y: height - entry.y // Invert y-axis\n    }));\n\n    const maxY = Math.max(...outgoingData.map(entry => entry.y));\n    console.log(`Max Number: ${maxY}`);\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n    ctx.moveTo(outgoingData[0].x, outgoingData[0].y);\n    for (let i = 1; i < outgoingData.length; i++) {\n      console.log(outgoingData[i].x, outgoingData[i].y);\n      ctx.lineTo(outgoingData[i].x, outgoingData[i].y);\n    }\n    ctx.strokeStyle = 'red';\n    ctx.lineWidth = 5;\n    ctx.stroke();\n  }, [width, height, intervals, incomingData]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: height,\n    style: lineGraphStyle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n};\n_s(LineGraphComponent, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = LineGraphComponent;\nvar _c;\n$RefreshReg$(_c, \"LineGraphComponent\");","map":{"version":3,"names":["LineGraphComponent","props","_s","canvasRef","useRef","width","height","sections","intervals","incomingData","data","lineGraphStyle","border","useEffect","canvas","current","ctx","getContext","outgoingData","map","entry","index","x","y","maxY","Math","max","console","log","clearRect","beginPath","moveTo","i","length","lineTo","strokeStyle","lineWidth","stroke","_jsxDEV","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/evelynzhang/Documents/mind-mender/my-react-app/src/LineGraph.js"],"sourcesContent":["const LineGraphComponent = (props) => {\n    const canvasRef = useRef(null);\n    const width = 250;\n    const height = 250;\n    const sections = 4;\n    const intervals = width / (sections - 1);\n    const incomingData = props.data;\n  \n    const lineGraphStyle = {\n      width: `${width}`,\n      border: '1px solid #ccc',\n    };\n  \n    useEffect(() => {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n  \n      // Initialize outgoingData with the correct y values\n      var outgoingData = incomingData.map((entry, index) => ({\n        x: index * intervals,\n        y: height - entry.y, // Invert y-axis\n      }));\n  \n      const maxY = Math.max(...outgoingData.map(entry => entry.y));\n      console.log(`Max Number: ${maxY}`);\n  \n      ctx.clearRect(0, 0, width, height);\n      ctx.beginPath();\n      ctx.moveTo(outgoingData[0].x, outgoingData[0].y);\n  \n      for (let i = 1; i < outgoingData.length; i++) {\n        console.log(outgoingData[i].x, outgoingData[i].y);\n        ctx.lineTo(outgoingData[i].x, outgoingData[i].y);\n      }\n  \n      ctx.strokeStyle = 'red';\n      ctx.lineWidth = 5;\n      ctx.stroke();\n    }, [width, height, intervals, incomingData]);\n  \n    return <canvas ref={canvasRef} width={width} height={height} style={lineGraphStyle} />;\n  };\n  "],"mappings":";;;AAAA,MAAMA,kBAAkB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAClC,MAAMC,SAAS,GAAGC,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMC,KAAK,GAAG,GAAG;EACjB,MAAMC,MAAM,GAAG,GAAG;EAClB,MAAMC,QAAQ,GAAG,CAAC;EAClB,MAAMC,SAAS,GAAGH,KAAK,IAAIE,QAAQ,GAAG,CAAC,CAAC;EACxC,MAAME,YAAY,GAAGR,KAAK,CAACS,IAAI;EAE/B,MAAMC,cAAc,GAAG;IACrBN,KAAK,EAAG,GAAEA,KAAM,EAAC;IACjBO,MAAM,EAAE;EACV,CAAC;EAEDC,SAAS,CAAC,MAAM;IACd,MAAMC,MAAM,GAAGX,SAAS,CAACY,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;;IAEnC;IACA,IAAIC,YAAY,GAAGT,YAAY,CAACU,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,MAAM;MACrDC,CAAC,EAAED,KAAK,GAAGb,SAAS;MACpBe,CAAC,EAAEjB,MAAM,GAAGc,KAAK,CAACG,CAAC,CAAE;IACvB,CAAC,CAAC,CAAC;;IAEH,MAAMC,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGR,YAAY,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACG,CAAC,CAAC,CAAC;IAC5DI,OAAO,CAACC,GAAG,CAAE,eAAcJ,IAAK,EAAC,CAAC;IAElCR,GAAG,CAACa,SAAS,CAAC,CAAC,EAAE,CAAC,EAAExB,KAAK,EAAEC,MAAM,CAAC;IAClCU,GAAG,CAACc,SAAS,CAAC,CAAC;IACfd,GAAG,CAACe,MAAM,CAACb,YAAY,CAAC,CAAC,CAAC,CAACI,CAAC,EAAEJ,YAAY,CAAC,CAAC,CAAC,CAACK,CAAC,CAAC;IAEhD,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,YAAY,CAACe,MAAM,EAAED,CAAC,EAAE,EAAE;MAC5CL,OAAO,CAACC,GAAG,CAACV,YAAY,CAACc,CAAC,CAAC,CAACV,CAAC,EAAEJ,YAAY,CAACc,CAAC,CAAC,CAACT,CAAC,CAAC;MACjDP,GAAG,CAACkB,MAAM,CAAChB,YAAY,CAACc,CAAC,CAAC,CAACV,CAAC,EAAEJ,YAAY,CAACc,CAAC,CAAC,CAACT,CAAC,CAAC;IAClD;IAEAP,GAAG,CAACmB,WAAW,GAAG,KAAK;IACvBnB,GAAG,CAACoB,SAAS,GAAG,CAAC;IACjBpB,GAAG,CAACqB,MAAM,CAAC,CAAC;EACd,CAAC,EAAE,CAAChC,KAAK,EAAEC,MAAM,EAAEE,SAAS,EAAEC,YAAY,CAAC,CAAC;EAE5C,oBAAO6B,OAAA;IAAQC,GAAG,EAAEpC,SAAU;IAACE,KAAK,EAAEA,KAAM;IAACC,MAAM,EAAEA,MAAO;IAACkC,KAAK,EAAE7B;EAAe;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxF,CAAC;AAAC1C,EAAA,CAzCEF,kBAAkB;AAAA6C,EAAA,GAAlB7C,kBAAkB;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}