{"ast":null,"code":"var _jsxFileName = \"/Users/evelynzhang/Documents/mind-mender/my-react-app/src/LineGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineGraph = props => {\n  const data = [{\n    y: 0\n  }, {\n    y: 11\n  }, {\n    y: 33\n  }, {\n    y: 50\n  }];\n  const dates = [{\n    dd: '08',\n    mm: '04'\n  }, {\n    dd: '09',\n    mm: '05'\n  }, {\n    dd: '10',\n    mm: '06'\n  }, {\n    dd: '11',\n    mm: '07'\n  }];\n  const size = [250, 250]; // (x, y) or (width, height)\n  const sections = 4; // Number of entries.\n  const scoreRange = [0, 50]; // (Minimum Score, Maximum Score)\n\n  const flexDirectionRow = {\n    display: 'flex',\n    flexDirection: 'row'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"LineGraph-Container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LineGraph-Background\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LineGraph-Content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"LineGraph-Content-Row-1\",\n          style: {\n            height: `${size[1]}px`,\n            ...flexDirectionRow\n          },\n          children: [/*#__PURE__*/_jsxDEV(LineGraphScores, {\n            scoreRange: scoreRange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(LineGraphComponent, {\n            data: data,\n            size: size,\n            section: sections\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"LineGraph-Content-Row-2\",\n          style: flexDirectionRow,\n          children: /*#__PURE__*/_jsxDEV(LineGraphDates, {\n            dates: dates\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_c = LineGraph;\nconst LineGraphComponent = props => {\n  _s();\n  const canvasRef = useRef(null);\n  const width = props.size[0];\n  const height = props.size[1];\n  const sections = props.sections;\n  const intervals = width / (sections - 1);\n  const incomingData = props.data;\n  const lineGraphDisplayStyle = {\n    flex: '0 0 85%',\n    backgroundColor: 'blue',\n    zIndex: '9999'\n  };\n  const lineGraphStyle = {\n    width: `${width}`,\n    border: '1px solid #ccc'\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    var outgoingData = incomingData.map((entry, index) => ({\n      x: index * intervals,\n      y: height - entry.y\n    }));\n    console.log(outgoingData);\n    // const maxY = Math.max(...outgoingData.map(entry => entry.y));\n    // console.log(`Max Number: ${maxY}`);\n\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n    ctx.moveTo(outgoingData[0].x, outgoingData[0].y);\n    for (let i = 1; i < outgoingData.length; i++) {\n      ctx.lineTo(outgoingData[i].x, outgoingData[i].y);\n    }\n    ctx.strokeStyle = 'red';\n    ctx.lineWidth = 5;\n    ctx.stroke();\n  }, [width, height, intervals, incomingData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LineGraph-Display\",\n    style: lineGraphDisplayStyle,\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: width,\n      height: height,\n      style: lineGraphStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(LineGraphComponent, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c2 = LineGraphComponent;\nconst LineGraphScores = props => {\n  const scoreRange = props.scoreRange;\n  const scoreRangeMax = Math.max(...scoreRange);\n  const scoreRangeMin = Math.min(...scoreRange);\n  const scoreInterval = (scoreRangeMax - scoreRangeMin) / 5;\n  return /*#__PURE__*/_jsxDEV(LineGraphScoresStyled, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"LineGraphScoreTop\",\n      children: scoreRangeMax\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: scoreInterval * 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: scoreInterval * 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: scoreInterval * 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: scoreInterval * 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"LineGraphScoreBottom\",\n      children: scoreRangeMin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_c3 = LineGraphScores;\nconst LineGraphScoresStyled = styled.div`\n    flex: 0 0 15%;\n    background-color: pink;\n    justify-content: space-between;\n    height: 250px;\n    p {\n        text-align: right;\n        /* margin: 20px 0px; */\n    }\n    #LineGraphScoreTop {\n        /* margin-top: 0px; */\n    }\n    #LineGraphScoreBottom {\n        /* margin-bottom: 0px; */\n    }\n`;\n_c4 = LineGraphScoresStyled;\nconst LineGraphDates = props => {\n  const dates = props.dates;\n  const datesStyle = {\n    flex: '0 0 85%',\n    display: 'flex',\n    flexDirection: 'row',\n    marginLeft: 'auto',\n    backgroundColor: 'orange'\n  };\n  const checkDate = index => {\n    if (dates[index] === undefined || dates[index] === null) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LineGraph-Dates\",\n    style: datesStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: checkDate(0) ? `${dates[0].dd}/${dates[0].mm}` : '-'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: checkDate(1) ? `${dates[1].dd}/${dates[1].mm}` : '-'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: checkDate(2) ? `${dates[2].dd}/${dates[2].mm}` : '-'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: checkDate(3) ? `${dates[3].dd}/${dates[3].mm}` : '-'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n};\n_c5 = LineGraphDates;\nexport default LineGraph;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"LineGraph\");\n$RefreshReg$(_c2, \"LineGraphComponent\");\n$RefreshReg$(_c3, \"LineGraphScores\");\n$RefreshReg$(_c4, \"LineGraphScoresStyled\");\n$RefreshReg$(_c5, \"LineGraphDates\");","map":{"version":3,"names":["React","useEffect","useRef","styled","jsxDEV","_jsxDEV","LineGraph","props","data","y","dates","dd","mm","size","sections","scoreRange","flexDirectionRow","display","flexDirection","id","children","className","style","height","LineGraphScores","fileName","_jsxFileName","lineNumber","columnNumber","LineGraphComponent","section","LineGraphDates","_c","_s","canvasRef","width","intervals","incomingData","lineGraphDisplayStyle","flex","backgroundColor","zIndex","lineGraphStyle","border","canvas","current","ctx","getContext","outgoingData","map","entry","index","x","console","log","clearRect","beginPath","moveTo","i","length","lineTo","strokeStyle","lineWidth","stroke","ref","_c2","scoreRangeMax","Math","max","scoreRangeMin","min","scoreInterval","LineGraphScoresStyled","_c3","div","_c4","datesStyle","marginLeft","checkDate","undefined","_c5","$RefreshReg$"],"sources":["/Users/evelynzhang/Documents/mind-mender/my-react-app/src/LineGraph.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nconst LineGraph = (props) => {\n\n    const data = [\n        {y: 0},\n        {y: 11},\n        {y: 33},\n        {y: 50},\n    ];\n    const dates = [\n        {dd: '08', mm: '04'},\n        {dd: '09', mm: '05'},\n        {dd: '10', mm: '06'},\n        {dd: '11', mm: '07'},\n    ];\n    const size = [250, 250]; // (x, y) or (width, height)\n    const sections = 4; // Number of entries.\n    const scoreRange = [0, 50]; // (Minimum Score, Maximum Score)\n\n    const flexDirectionRow = {\n        display: 'flex',\n        flexDirection: 'row',\n    };\n\n    return (\n        <div id=\"LineGraph-Container\">\n            <div className=\"LineGraph-Background\">\n                <div className=\"LineGraph-Content\">\n                    <div className=\"LineGraph-Content-Row-1\" style={{height: `${size[1]}px`, ...flexDirectionRow,}}>\n                        <LineGraphScores scoreRange={scoreRange}/>\n                        <LineGraphComponent data={data} size={size} section={sections}/>\n                    </div>\n                    <div className=\"LineGraph-Content-Row-2\" style={flexDirectionRow}>\n                        <LineGraphDates dates={dates}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nconst LineGraphComponent = (props) => {\n    const canvasRef = useRef(null);\n    const width = props.size[0];\n    const height = props.size[1];\n    const sections = props.sections;\n    const intervals = width / (sections - 1);\n    const incomingData = props.data;\n\n    const lineGraphDisplayStyle = {\n        flex: '0 0 85%',\n        backgroundColor: 'blue',\n        zIndex: '9999',\n    };\n\n    const lineGraphStyle = {\n        width: `${width}`,\n        border: '1px solid #ccc',\n    };\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n\n        var outgoingData = incomingData.map((entry, index) => ({\n            x: index * intervals,\n            y: height - entry.y,\n        }));\n\n        console.log(outgoingData);\n        // const maxY = Math.max(...outgoingData.map(entry => entry.y));\n        // console.log(`Max Number: ${maxY}`);\n\n        ctx.clearRect(0, 0, width, height);\n        ctx.beginPath();\n        ctx.moveTo(outgoingData[0].x, outgoingData[0].y);\n\n        for (let i = 1; i < outgoingData.length; i++) {\n        ctx.lineTo(outgoingData[i].x, outgoingData[i].y);\n        }\n\n        ctx.strokeStyle = 'red';\n        ctx.lineWidth = 5;\n        ctx.stroke();\n    }, [width, height, intervals, incomingData]);\n\n    return (\n        <div className=\"LineGraph-Display\" style={lineGraphDisplayStyle}>\n            <canvas ref={canvasRef} width={width} height={height} style={lineGraphStyle} />\n        </div>\n    );\n};\n\nconst LineGraphScores = (props) => {\n\n    const scoreRange = props.scoreRange;\n    const scoreRangeMax = Math.max(...scoreRange);\n    const scoreRangeMin = Math.min(...scoreRange);\n    const scoreInterval = (scoreRangeMax-scoreRangeMin)/5\n\n    return (\n        <LineGraphScoresStyled>\n            <p id='LineGraphScoreTop'>{scoreRangeMax}</p>\n            <p>{scoreInterval*4}</p>\n            <p>{scoreInterval*3}</p>\n            <p>{scoreInterval*2}</p>\n            <p>{scoreInterval*1}</p>\n            <p id='LineGraphScoreBottom'>{scoreRangeMin}</p>\n        </LineGraphScoresStyled>\n    );\n};\n\nconst LineGraphScoresStyled = styled.div`\n    flex: 0 0 15%;\n    background-color: pink;\n    justify-content: space-between;\n    height: 250px;\n    p {\n        text-align: right;\n        /* margin: 20px 0px; */\n    }\n    #LineGraphScoreTop {\n        /* margin-top: 0px; */\n    }\n    #LineGraphScoreBottom {\n        /* margin-bottom: 0px; */\n    }\n`;\n\nconst LineGraphDates = (props) => {\n\n    const dates = props.dates;\n\n    const datesStyle = {\n        flex: '0 0 85%',\n        display: 'flex',\n        flexDirection: 'row',\n        marginLeft: 'auto',\n        backgroundColor: 'orange',\n    };\n\n    const checkDate = (index) => {\n        if (dates[index] === undefined || dates[index] === null) {\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n    return (\n        <div className=\"LineGraph-Dates\" style={datesStyle}>\n            <p>{checkDate(0) ? `${dates[0].dd}/${dates[0].mm}` : '-'}</p>\n            <p>{checkDate(1) ? `${dates[1].dd}/${dates[1].mm}` : '-'}</p>\n            <p>{checkDate(2) ? `${dates[2].dd}/${dates[2].mm}` : '-'}</p>\n            <p>{checkDate(3) ? `${dates[3].dd}/${dates[3].mm}` : '-'}</p>\n        </div>\n    );\n};\n\nexport default LineGraph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}