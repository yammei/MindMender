{"ast":null,"code":"var _jsxFileName = \"/Users/evelynzhang/Documents/mind-mender/my-react-app/src/LineGraph.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineGraph = props => {\n  _s();\n  // VARIABLES: Line Graph Container Properties\n  const containerHeight = 400;\n  const containerWidth = 400;\n  const datesWidth = 60;\n\n  // VARIABLES: Line Graph Mock Data\n  const [componentAssessment1Data, setComponentAssessment1Data] = useState([{\n    y: 0\n  }]);\n  const [datesAssessment1Data, setDatesAssessment1Data] = useState([{\n    dd: '08',\n    mm: '04'\n  }]);\n  const [componentAssessment2Data, setComponentAssessment2Data] = useState([{\n    y: 0\n  }]);\n  const [datesAssessment2Data, setDatesAssessment2Data] = useState([{\n    dd: '08',\n    mm: '04'\n  }]);\n  const componentSize = [containerWidth * .85, 250]; // (x, y) or (width, height)\n  const componentSections = 4; // Number of entries.\n  const scoreRange = [0, 50]; // (Minimum Score, Maximum Score)\n\n  // REQUEST: Retrieve user's assessment history.\n  useEffect(() => {\n    const getAssessmentData = async (numOfEntriesParam, assessmentNameParam) => {\n      try {\n        const numOfEntries = numOfEntriesParam;\n        const assessmentName = assessmentNameParam;\n        const storedUserId = localStorage.getItem('userId');\n        const response = await axios.get(`http://localhost:4000/api/getArchiveScore/${storedUserId}/${numOfEntries}/${assessmentName}`);\n        const reversedData = response.data.entries.reverse();\n        const newScoreData = reversedData.map(entry => ({\n          y: entry.score\n        }));\n        console.log(newScoreData.map(entry => entry.y));\n        const newDatesData = reversedData.map(entry => {\n          const [year, month, day] = entry.date.split('-');\n          return {\n            dd: day,\n            mm: month\n          };\n        });\n        console.log(newDatesData);\n        if (assessmentName === 'happiness') {\n          setComponentAssessment1Data(newScoreData);\n          setDatesAssessment1Data(newDatesData);\n        }\n        if (assessmentName === 'socialselfcare') {\n          setComponentAssessment2Data(newScoreData);\n          setDatesAssessment2Data(newDatesData);\n        }\n      } catch (error) {\n        console.error(\"Error fetching or processing data:\", error);\n      }\n    };\n    getAssessmentData(4, 'happiness');\n    getAssessmentData(4, 'socialselfcare');\n  }, []);\n\n  // STYLE: Component background.\n  const lineGraphBackgroundStyle = {\n    position: 'absolute',\n    left: '-0%',\n    marginTop: '50px',\n    height: `${containerHeight}px`,\n    width: `${containerWidth}px`,\n    borderRadius: '25px',\n    backgroundColor: 'rgb(235,235,235)'\n  };\n  return /*#__PURE__*/_jsxDEV(LineGraphContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LineGraph-Background\",\n      style: lineGraphBackgroundStyle,\n      children: [/*#__PURE__*/_jsxDEV(LineGraphScoreAndComponent, {\n        scoreRange: scoreRange,\n        componentData1: componentAssessment1Data,\n        componentData2: componentAssessment2Data,\n        componentSize: componentSize,\n        componentSections: componentSections,\n        datesWidth: datesWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LineGraphDates, {\n        datesData: datesAssessment1Data,\n        datesData2: datesAssessment2Data,\n        datesWidth: datesWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n// STYLE: Parent container.\n_s(LineGraph, \"DBFXhM7gdTVOsZrn6c/coIs0bPg=\");\n_c = LineGraph;\nconst LineGraphContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    p {\n        user-select: none;\n        color: rgb(20,20,20);\n        z-index: 9999;\n    }\n`;\n\n// SUB-COMPONENT: Part 1 - Combines y-axis and line graph component.\n_c2 = LineGraphContainer;\nconst LineGraphScoreAndComponent = props => {\n  const range = props.scoreRange;\n  const size = props.componentSize;\n  const data1 = props.componentData1;\n  const data2 = props.componentData2;\n  const sections = props.componentSections;\n  const width = props.datesWidth;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LineGraph-Content-Row-1\",\n    style: {\n      height: `${size[1]}px`,\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(LineGraphScore, {\n      scoreRange: range\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LineGraphComponent, {\n      data1: data1,\n      data2: data2,\n      size: size,\n      sections: sections,\n      scoreRange: range,\n      width: width\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n\n// SUB-COMPONENT: Part 1A - Line graph component.\n_c3 = LineGraphScoreAndComponent;\nconst LineGraphComponent = props => {\n  _s2();\n  // VARIABLES: Line Graph Display Properties\n  const canvasRef = useRef(null);\n  const width = props.size[0] - props.width;\n  const height = props.size[1];\n  const sections = props.sections;\n  const intervals = width / (sections - 1);\n  const maxScore = Math.max(...props.scoreRange);\n  const incomingData1 = props.data1;\n  const incomingData2 = props.data2;\n\n  // STYLE: Line Graph Component Stylings\n  const lineGraphDisplayStyle = {\n    flex: '0 0 85%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: 'blue',\n    zIndex: '9999'\n  };\n  const lineGraphStyle = {\n    width: `${width}`\n    // border: '1px solid #ccc',\n  };\n\n  // GRAPH: Line Graph Creation.\n  useEffect(() => {\n    // VARIABLES: Line graph data preperation.\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    var outgoingData1 = incomingData1.map((entry, index) => ({\n      x: index * intervals,\n      y: height - height * entry.y / maxScore\n    }));\n    var outgoingData2 = incomingData2.map((entry, index) => ({\n      x: index * intervals,\n      y: height - height * entry.y / maxScore\n    }));\n\n    // CREATE: Assessment 1 score trend.\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n    ctx.moveTo(outgoingData1[0].x, outgoingData1[0].y);\n    for (let i = 1; i < outgoingData1.length; i++) {\n      ctx.lineTo(outgoingData1[i].x, outgoingData1[i].y);\n    }\n    ctx.strokeStyle = 'red';\n    ctx.lineWidth = 5;\n    ctx.stroke();\n\n    // CREATE: Assessment 2 score trend.\n    ctx.beginPath();\n    ctx.moveTo(outgoingData2[0].x, outgoingData2[0].y - 30);\n    for (let i = 1; i < outgoingData2.length; i++) {\n      ctx.lineTo(outgoingData2[i].x, outgoingData2[i].y - 30);\n    }\n    ctx.strokeStyle = 'green';\n    ctx.lineWidth = 5;\n    ctx.stroke();\n  }, [width, height, intervals, incomingData1]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LineGraph-Display\",\n    style: lineGraphDisplayStyle,\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: width,\n      height: height,\n      style: lineGraphStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n};\n\n// SUB-COMPONENT: Part 1B - The y-axis.\n_s2(LineGraphComponent, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c4 = LineGraphComponent;\nconst LineGraphScore = props => {\n  const scoreRange = props.scoreRange;\n  const scoreRangeMax = Math.max(...scoreRange);\n  const scoreRangeMin = Math.min(...scoreRange);\n  const scoreInterval = (scoreRangeMax - scoreRangeMin) / 5;\n  return /*#__PURE__*/_jsxDEV(LineGraphScoreStyled, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"LineGraphScoreTop\",\n      children: scoreRangeMax\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: scoreInterval * 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: scoreInterval * 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: scoreInterval * 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: scoreInterval * 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"LineGraphScoreBottom\",\n      children: scoreRangeMin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n};\n\n// STYLE: Part 1B - The y-axis stylings.\n_c5 = LineGraphScore;\nconst LineGraphScoreStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 0 0 10%;\n    justify-content: space-between;\n    background-color: pink;\n    p {\n        font-size: 10pt;\n        text-align: right;\n        margin: 0px;\n        /* background-color: yellow; */\n    }\n`;\n\n// SUB-COMPONENT: Part 2 - The x-axis.\n_c6 = LineGraphScoreStyled;\nconst LineGraphDates = props => {\n  const dates = props.datesData;\n  const width = props.datesWidth;\n  const checkDate = index => !!dates[index];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LineGraph-Content-Row-2-Parent\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LineGraph-Content-Row-2\",\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(LineGraphDateStyled, {\n        datesWidth: width,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: checkDate(0) ? `${dates[0].dd}/${dates[0].mm}` : 'MM/DD'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: checkDate(1) ? `${dates[1].dd}/${dates[1].mm}` : 'MM/DD'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: checkDate(2) ? `${dates[2].dd}/${dates[2].mm}` : 'MM/DD'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: checkDate(3) ? `${dates[3].dd}/${dates[3].mm}` : 'MM/DD'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: '0 0 2.5%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LineGraph-Content-Row-2\",\n      style: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(LineGraphDateStyled, {\n        datesWidth: width,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: checkDate(0) ? `${dates[0].dd}/${dates[0].mm}` : 'MM/DD'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: checkDate(1) ? `${dates[1].dd}/${dates[1].mm}` : 'MM/DD'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: checkDate(2) ? `${dates[2].dd}/${dates[2].mm}` : 'MM/DD'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: checkDate(3) ? `${dates[3].dd}/${dates[3].mm}` : 'MM/DD'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: '0 0 2.5%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 9\n  }, this);\n};\n\n//STYLE: Part 2 - The x-axis stylings.\n_c7 = LineGraphDates;\nconst LineGraphDateStyled = styled.div`\n    flex: 0 0 85%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin-left: auto;\n    /* background-color: orange; */\n    p {\n        text-align: center;\n        font-size: 10pt;\n        width: ${props => props.datesWidth}px;\n        margin: 0px;\n        margin-top: 25px;\n        background-color: red;\n        transform: rotate(-0deg);\n    }\n`;\n_c8 = LineGraphDateStyled;\nexport default LineGraph;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"LineGraph\");\n$RefreshReg$(_c2, \"LineGraphContainer\");\n$RefreshReg$(_c3, \"LineGraphScoreAndComponent\");\n$RefreshReg$(_c4, \"LineGraphComponent\");\n$RefreshReg$(_c5, \"LineGraphScore\");\n$RefreshReg$(_c6, \"LineGraphScoreStyled\");\n$RefreshReg$(_c7, \"LineGraphDates\");\n$RefreshReg$(_c8, \"LineGraphDateStyled\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","axios","jsxDEV","_jsxDEV","LineGraph","props","_s","containerHeight","containerWidth","datesWidth","componentAssessment1Data","setComponentAssessment1Data","y","datesAssessment1Data","setDatesAssessment1Data","dd","mm","componentAssessment2Data","setComponentAssessment2Data","datesAssessment2Data","setDatesAssessment2Data","componentSize","componentSections","scoreRange","getAssessmentData","numOfEntriesParam","assessmentNameParam","numOfEntries","assessmentName","storedUserId","localStorage","getItem","response","get","reversedData","data","entries","reverse","newScoreData","map","entry","score","console","log","newDatesData","year","month","day","date","split","error","lineGraphBackgroundStyle","position","left","marginTop","height","width","borderRadius","backgroundColor","LineGraphContainer","children","className","style","LineGraphScoreAndComponent","componentData1","componentData2","fileName","_jsxFileName","lineNumber","columnNumber","LineGraphDates","datesData","datesData2","_c","div","_c2","range","size","data1","data2","sections","display","flexDirection","justifyContent","LineGraphScore","LineGraphComponent","_c3","_s2","canvasRef","intervals","maxScore","Math","max","incomingData1","incomingData2","lineGraphDisplayStyle","flex","alignItems","zIndex","lineGraphStyle","canvas","current","ctx","getContext","outgoingData1","index","x","outgoingData2","clearRect","beginPath","moveTo","i","length","lineTo","strokeStyle","lineWidth","stroke","ref","_c4","scoreRangeMax","scoreRangeMin","min","scoreInterval","LineGraphScoreStyled","id","_c5","_c6","dates","checkDate","LineGraphDateStyled","_c7","_c8","$RefreshReg$"],"sources":["/Users/evelynzhang/Documents/mind-mender/my-react-app/src/LineGraph.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst LineGraph = (props) => {\n\n    // VARIABLES: Line Graph Container Properties\n    const containerHeight = 400;\n    const containerWidth = 400;\n    const datesWidth = 60;\n\n    // VARIABLES: Line Graph Mock Data\n    const [componentAssessment1Data, setComponentAssessment1Data] = useState([{y: 0},]);\n    const [datesAssessment1Data, setDatesAssessment1Data] = useState([{dd: '08', mm: '04'},]);\n\n    const [componentAssessment2Data, setComponentAssessment2Data] = useState([{y: 0},]);\n    const [datesAssessment2Data, setDatesAssessment2Data] = useState([{dd: '08', mm: '04'},]);\n\n    const componentSize = [(containerWidth*.85), 250]; // (x, y) or (width, height)\n    const componentSections = 4; // Number of entries.\n    const scoreRange = [0, 50]; // (Minimum Score, Maximum Score)\n\n    // REQUEST: Retrieve user's assessment history.\n    useEffect(() => {\n        const getAssessmentData = async (numOfEntriesParam, assessmentNameParam) => {\n            try {\n                const numOfEntries = numOfEntriesParam;\n                const assessmentName = assessmentNameParam;\n                const storedUserId = localStorage.getItem('userId');\n                const response = await axios.get(`http://localhost:4000/api/getArchiveScore/${storedUserId}/${numOfEntries}/${assessmentName}`);\n                const reversedData = response.data.entries.reverse();\n\n                const newScoreData = reversedData.map(entry => ({ y: entry.score }));\n                console.log(newScoreData.map(entry => entry.y));\n\n                const newDatesData = reversedData.map(entry => {\n                    const [year, month, day] = entry.date.split('-');\n                    return { dd: day, mm: month };\n                });\n                console.log(newDatesData);\n\n                if (assessmentName === 'happiness') {\n                    setComponentAssessment1Data(newScoreData);\n                    setDatesAssessment1Data(newDatesData);\n                }\n                if (assessmentName === 'socialselfcare') {\n                    setComponentAssessment2Data(newScoreData);\n                    setDatesAssessment2Data(newDatesData);\n                }\n\n\n            } catch (error) {\n                console.error(\"Error fetching or processing data:\", error);\n            }\n        };\n        getAssessmentData(4, 'happiness');\n        getAssessmentData(4, 'socialselfcare');\n\n    }, []);\n\n    // STYLE: Component background.\n    const lineGraphBackgroundStyle = {\n        position: 'absolute',\n        left: '-0%',\n        marginTop: '50px',\n        height: `${containerHeight}px`,\n        width: `${containerWidth}px`,\n        borderRadius: '25px',\n        backgroundColor: 'rgb(235,235,235)',\n    };\n\n    return (\n        <LineGraphContainer>\n            <div className=\"LineGraph-Background\" style={lineGraphBackgroundStyle}>\n                {/* SUB-COMPONENT Part 1A/B */}\n                <LineGraphScoreAndComponent scoreRange={scoreRange} componentData1={componentAssessment1Data} componentData2={componentAssessment2Data} componentSize={componentSize} componentSections={componentSections} datesWidth={datesWidth}/>\n                {/* SUB-COMPONENT Part 2 */}\n                <LineGraphDates datesData={datesAssessment1Data} datesData2={datesAssessment2Data} datesWidth={datesWidth}/>\n            </div>\n        </LineGraphContainer>\n    );\n};\n\n// STYLE: Parent container.\nconst LineGraphContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    p {\n        user-select: none;\n        color: rgb(20,20,20);\n        z-index: 9999;\n    }\n`;\n\n// SUB-COMPONENT: Part 1 - Combines y-axis and line graph component.\nconst LineGraphScoreAndComponent = (props) => {\n\n    const range = props.scoreRange;\n    const size = props.componentSize;\n    const data1 = props.componentData1;\n    const data2 = props.componentData2;\n    const sections = props.componentSections;\n    const width = props.datesWidth;\n\n    return(\n        <div className=\"LineGraph-Content-Row-1\" style={{height: `${size[1]}px`, display: 'flex', flexDirection: 'row', justifyContent: 'center', marginTop: '50px'}}>\n            <LineGraphScore scoreRange={range}/>\n            <LineGraphComponent data1={data1} data2={data2} size={size} sections={sections} scoreRange={range} width={width}/>\n        </div>\n    );\n};\n\n// SUB-COMPONENT: Part 1A - Line graph component.\nconst LineGraphComponent = (props) => {\n\n    // VARIABLES: Line Graph Display Properties\n    const canvasRef = useRef(null);\n    const width = props.size[0] - props.width;\n    const height = props.size[1];\n    const sections = props.sections;\n    const intervals = width / (sections - 1);\n    const maxScore = Math.max(...props.scoreRange);\n    const incomingData1 = props.data1;\n    const incomingData2 = props.data2;\n\n    // STYLE: Line Graph Component Stylings\n    const lineGraphDisplayStyle = {\n        flex: '0 0 85%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        backgroundColor: 'blue',\n        zIndex: '9999',\n    };\n    const lineGraphStyle = {\n        width: `${width}`,\n        // border: '1px solid #ccc',\n    };\n\n    // GRAPH: Line Graph Creation.\n    useEffect(() => {\n\n        // VARIABLES: Line graph data preperation.\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        var outgoingData1 = incomingData1.map((entry, index) => ({\n            x: index * intervals,\n            y: height - (height * entry.y / maxScore),\n        }));\n        var outgoingData2 = incomingData2.map((entry, index) => ({\n            x: index * intervals,\n            y: height - (height * entry.y / maxScore),\n        }));\n\n        // CREATE: Assessment 1 score trend.\n        ctx.clearRect(0, 0, width, height);\n        ctx.beginPath();\n        ctx.moveTo(outgoingData1[0].x, outgoingData1[0].y);\n\n        for (let i = 1; i < outgoingData1.length; i++) {\n            ctx.lineTo(outgoingData1[i].x, outgoingData1[i].y);\n        }\n\n        ctx.strokeStyle = 'red';\n        ctx.lineWidth = 5;\n        ctx.stroke();\n\n        // CREATE: Assessment 2 score trend.\n        ctx.beginPath();\n        ctx.moveTo(outgoingData2[0].x, outgoingData2[0].y-30);\n\n        for (let i = 1; i < outgoingData2.length; i++) {\n            ctx.lineTo(outgoingData2[i].x, outgoingData2[i].y-30);\n        }\n\n        ctx.strokeStyle = 'green';\n        ctx.lineWidth = 5;\n        ctx.stroke();\n    }, [width, height, intervals, incomingData1]);\n\n    return (\n        <div className=\"LineGraph-Display\" style={lineGraphDisplayStyle}>\n            <canvas ref={canvasRef} width={width} height={height} style={lineGraphStyle} />\n        </div>\n    );\n};\n\n// SUB-COMPONENT: Part 1B - The y-axis.\nconst LineGraphScore = (props) => {\n\n    const scoreRange = props.scoreRange;\n    const scoreRangeMax = Math.max(...scoreRange);\n    const scoreRangeMin = Math.min(...scoreRange);\n    const scoreInterval = (scoreRangeMax-scoreRangeMin)/5\n\n    return (\n        <LineGraphScoreStyled>\n            <p id='LineGraphScoreTop'>{scoreRangeMax}</p>\n            <p>{scoreInterval*4}</p>\n            <p>{scoreInterval*3}</p>\n            <p>{scoreInterval*2}</p>\n            <p>{scoreInterval*1}</p>\n            <p id='LineGraphScoreBottom'>{scoreRangeMin}</p>\n        </LineGraphScoreStyled>\n    );\n};\n\n// STYLE: Part 1B - The y-axis stylings.\nconst LineGraphScoreStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 0 0 10%;\n    justify-content: space-between;\n    background-color: pink;\n    p {\n        font-size: 10pt;\n        text-align: right;\n        margin: 0px;\n        /* background-color: yellow; */\n    }\n`;\n\n// SUB-COMPONENT: Part 2 - The x-axis.\nconst LineGraphDates = (props) => {\n\n    const dates = props.datesData;\n    const width = props.datesWidth;\n\n    const checkDate = (index) => !!dates[index];\n\n    return (\n        <div className='LineGraph-Content-Row-2-Parent'>\n            <div className=\"LineGraph-Content-Row-2\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                <LineGraphDateStyled datesWidth={width}>\n                    <p>{ checkDate(0) ? `${ dates[0].dd }/${ dates[0].mm }` : 'MM/DD' }</p>\n                    <p>{ checkDate(1) ? `${ dates[1].dd }/${ dates[1].mm }` : 'MM/DD' }</p>\n                    <p>{ checkDate(2) ? `${ dates[2].dd }/${ dates[2].mm }` : 'MM/DD' }</p>\n                    <p>{ checkDate(3) ? `${ dates[3].dd }/${ dates[3].mm }` : 'MM/DD' }</p>\n                </LineGraphDateStyled>\n                <div style={{ flex: '0 0 2.5%'}}/>\n            </div>\n            <div className=\"LineGraph-Content-Row-2\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n                <LineGraphDateStyled datesWidth={width}>\n                    <p>{ checkDate(0) ? `${ dates[0].dd }/${ dates[0].mm }` : 'MM/DD' }</p>\n                    <p>{ checkDate(1) ? `${ dates[1].dd }/${ dates[1].mm }` : 'MM/DD' }</p>\n                    <p>{ checkDate(2) ? `${ dates[2].dd }/${ dates[2].mm }` : 'MM/DD' }</p>\n                    <p>{ checkDate(3) ? `${ dates[3].dd }/${ dates[3].mm }` : 'MM/DD' }</p>\n                </LineGraphDateStyled>\n                <div style={{ flex: '0 0 2.5%'}}/>\n            </div>\n        </div>\n    );\n};\n\n//STYLE: Part 2 - The x-axis stylings.\nconst LineGraphDateStyled = styled.div`\n    flex: 0 0 85%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin-left: auto;\n    /* background-color: orange; */\n    p {\n        text-align: center;\n        font-size: 10pt;\n        width: ${(props) => props.datesWidth}px;\n        margin: 0px;\n        margin-top: 25px;\n        background-color: red;\n        transform: rotate(-0deg);\n    }\n`;\n\nexport default LineGraph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}