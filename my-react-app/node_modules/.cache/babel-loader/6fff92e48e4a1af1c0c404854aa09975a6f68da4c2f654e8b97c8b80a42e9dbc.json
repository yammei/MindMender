{"ast":null,"code":"var _jsxFileName = \"/Users/evelynzhang/Documents/mind-mender/my-react-app/src/LineGraph.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineGraph = props => {\n  _s();\n  // VARIABLES: Line Graph Container Properties\n  const containerHeight = 400;\n  const containerWidth = 400;\n  const datesWidth = 60;\n\n  // VARIABLES: Line Graph Mock Data\n  const [componentData, setComponentData] = useState([{\n    y: 0\n  }, {\n    y: 23\n  }, {\n    y: 5\n  }, {\n    y: 20\n  }]);\n  const [datesData, setDatesData] = useState([{\n    dd: '08',\n    mm: '04'\n  }, {\n    dd: '09',\n    mm: '05'\n  }\n  // {dd: '10', mm: '06'},\n  // {dd: '11', mm: '07'},\n  ]);\n\n  const componentSize = [containerWidth * .85, 250]; // (x, y) or (width, height)\n  const componentSections = 4; // Number of entries.\n  const scoreRange = [0, 50]; // (Minimum Score, Maximum Score)\n\n  // REQUEST: Retrieve user's assessment history.\n  useEffect(() => {\n    const getAssessmentData = async (numOfEntriesParam, assessmentNameParam) => {\n      try {\n        const numOfEntries = numOfEntriesParam;\n        const assessmentName = assessmentNameParam;\n        const storedUserId = localStorage.getItem('userId');\n        const response = await axios.get(`http://localhost:4000/api/getArchiveScore/${storedUserId}/${numOfEntries}/${assessmentName}`);\n        const reversedData = response.data.entries.reverse();\n        const newScoreData = reversedData.map(entry => ({\n          y: entry.score\n        }));\n        console.log(newScoreData.map(entry => entry.y));\n        setComponentData(newScoreData);\n        const newDatesData = reversedData.map(entry => {\n          const [year, month, day] = entry.date.split('-');\n          return {\n            dd: day,\n            mm: month\n          };\n        });\n        console.log(newDatesData);\n        setDatesData(newDatesData);\n      } catch (error) {\n        console.error(\"Error fetching or processing data:\", error);\n      }\n    };\n    getAssessmentData(4, 'happiness');\n    getAssessmentData(4, 'socialselfcare');\n  }, []);\n\n  // STYLE: Component background.\n  const lineGraphBackgroundStyle = {\n    position: 'absolute',\n    left: '-0%',\n    marginTop: '50px',\n    height: `${containerHeight}px`,\n    width: `${containerWidth}px`,\n    borderRadius: '25px',\n    backgroundColor: 'rgb(235,235,235)'\n  };\n  return /*#__PURE__*/_jsxDEV(LineGraphContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LineGraph-Background\",\n      style: lineGraphBackgroundStyle,\n      children: [/*#__PURE__*/_jsxDEV(LineGraphScoreAndComponent, {\n        scoreRange: scoreRange,\n        componentData: componentData,\n        componentSize: componentSize,\n        componentSections: componentSections,\n        datesWidth: datesWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LineGraphDates, {\n        datesData: datesData,\n        datesWidth: datesWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n// STYLE: Parent container.\n_s(LineGraph, \"Fu/1Gh6IEqXOH7HtOXN8ivU5HIE=\");\n_c = LineGraph;\nconst LineGraphContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    p {\n        user-select: none;\n        color: rgb(20,20,20);\n        z-index: 9999;\n    }\n`;\n\n// SUB-COMPONENT: Part 1 - Combines y-axis and line graph component.\n_c2 = LineGraphContainer;\nconst LineGraphScoreAndComponent = props => {\n  const range = props.scoreRange;\n  const size = props.componentSize;\n  const data = props.componentData;\n  const sections = props.componentSections;\n  const width = props.datesWidth;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LineGraph-Content-Row-1\",\n    style: {\n      height: `${size[1]}px`,\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(LineGraphScore, {\n      scoreRange: range\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LineGraphComponent, {\n      data: data,\n      size: size,\n      sections: sections,\n      scoreRange: range,\n      width: width\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n\n// SUB-COMPONENT: Part 1A - Line graph component.\n_c3 = LineGraphScoreAndComponent;\nconst LineGraphComponent = props => {\n  _s2();\n  // VARIABLES: Line Graph Display Properties\n  const canvasRef = useRef(null);\n  const width = props.size[0] - props.width;\n  const height = props.size[1];\n  const sections = props.sections;\n  const intervals = width / (sections - 1);\n  const maxScore = Math.max(...props.scoreRange);\n  const incomingData = props.data;\n\n  // STYLE: Line Graph Component Stylings\n  const lineGraphDisplayStyle = {\n    flex: '0 0 85%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: 'blue',\n    zIndex: '9999'\n  };\n  const lineGraphStyle = {\n    width: `${width}`\n    // border: '1px solid #ccc',\n  };\n\n  // GRAPH: Line Graph Creation.\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    var outgoingData = incomingData.map((entry, index) => ({\n      x: index * intervals,\n      y: height - height * entry.y / maxScore\n    }));\n\n    // const maxY = Math.max(...outgoingData.map(entry => entry.y));\n    // console.log(`Max Number: ${maxY}`);\n\n    ctx.clearRect(0, 0, width, height);\n    ctx.beginPath();\n    ctx.moveTo(outgoingData[0].x, outgoingData[0].y);\n    // console.log(`(x${0}, y${0}): (`, outgoingData[0].x, ',' ,outgoingData[0].y, ')');\n\n    for (let i = 1; i < outgoingData.length; i++) {\n      ctx.lineTo(outgoingData[i].x, outgoingData[i].y);\n      // console.log(`(x${i}, y${i}): (`, outgoingData[i].x, ',' ,outgoingData[i].y, ')');\n    }\n\n    ctx.strokeStyle = 'red';\n    ctx.lineWidth = 5;\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.moveTo(outgoingData[0].x, outgoingData[0].y - 30);\n    // console.log(`(x${0}, y${0}): (`, outgoingData[0].x, ',' ,outgoingData[0].y, ')');\n\n    for (let i = 1; i < outgoingData.length; i++) {\n      ctx.lineTo(outgoingData[i].x, outgoingData[i].y - 30);\n      // console.log(`(x${i}, y${i}): (`, outgoingData[i].x, ',' ,outgoingData[i].y, ')');\n    }\n\n    ctx.strokeStyle = 'green';\n    ctx.lineWidth = 5;\n    ctx.stroke();\n  }, [width, height, intervals, incomingData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LineGraph-Display\",\n    style: lineGraphDisplayStyle,\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: width,\n      height: height,\n      style: lineGraphStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 9\n  }, this);\n};\n\n// SUB-COMPONENT: Part 1B - The y-axis.\n_s2(LineGraphComponent, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c4 = LineGraphComponent;\nconst LineGraphScore = props => {\n  const scoreRange = props.scoreRange;\n  const scoreRangeMax = Math.max(...scoreRange);\n  const scoreRangeMin = Math.min(...scoreRange);\n  const scoreInterval = (scoreRangeMax - scoreRangeMin) / 5;\n  return /*#__PURE__*/_jsxDEV(LineGraphScoreStyled, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"LineGraphScoreTop\",\n      children: scoreRangeMax\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: scoreInterval * 4\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: scoreInterval * 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: scoreInterval * 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: scoreInterval * 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"LineGraphScoreBottom\",\n      children: scoreRangeMin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 9\n  }, this);\n};\n\n// STYLE: Part 1B - The y-axis stylings.\n_c5 = LineGraphScore;\nconst LineGraphScoreStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 0 0 10%;\n    justify-content: space-between;\n    background-color: pink;\n    p {\n        font-size: 10pt;\n        text-align: right;\n        margin: 0px;\n        /* background-color: yellow; */\n    }\n`;\n\n// SUB-COMPONENT: Part 2 - The x-axis.\n_c6 = LineGraphScoreStyled;\nconst LineGraphDates = props => {\n  const dates = props.datesData;\n  const width = props.datesWidth;\n  const checkDate = index => !!dates[index];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LineGraph-Content-Row-2\",\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(LineGraphDateStyled, {\n      datesWidth: width,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: checkDate(0) ? `${dates[0].dd}/${dates[0].mm}` : 'MM/DD'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: checkDate(1) ? `${dates[1].dd}/${dates[1].mm}` : 'MM/DD'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: checkDate(2) ? `${dates[2].dd}/${dates[2].mm}` : 'MM/DD'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: checkDate(3) ? `${dates[3].dd}/${dates[3].mm}` : 'MM/DD'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: '0 0 2.5%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 9\n  }, this);\n};\n\n//STYLE: Part 2 - The x-axis stylings.\n_c7 = LineGraphDates;\nconst LineGraphDateStyled = styled.div`\n    flex: 0 0 85%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin-left: auto;\n    /* background-color: orange; */\n    p {\n        text-align: center;\n        font-size: 10pt;\n        width: ${props => props.datesWidth}px;\n        margin: 0px;\n        margin-top: 25px;\n        background-color: red;\n        transform: rotate(-0deg);\n    }\n`;\n_c8 = LineGraphDateStyled;\nexport default LineGraph;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"LineGraph\");\n$RefreshReg$(_c2, \"LineGraphContainer\");\n$RefreshReg$(_c3, \"LineGraphScoreAndComponent\");\n$RefreshReg$(_c4, \"LineGraphComponent\");\n$RefreshReg$(_c5, \"LineGraphScore\");\n$RefreshReg$(_c6, \"LineGraphScoreStyled\");\n$RefreshReg$(_c7, \"LineGraphDates\");\n$RefreshReg$(_c8, \"LineGraphDateStyled\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","axios","jsxDEV","_jsxDEV","LineGraph","props","_s","containerHeight","containerWidth","datesWidth","componentData","setComponentData","y","datesData","setDatesData","dd","mm","componentSize","componentSections","scoreRange","getAssessmentData","numOfEntriesParam","assessmentNameParam","numOfEntries","assessmentName","storedUserId","localStorage","getItem","response","get","reversedData","data","entries","reverse","newScoreData","map","entry","score","console","log","newDatesData","year","month","day","date","split","error","lineGraphBackgroundStyle","position","left","marginTop","height","width","borderRadius","backgroundColor","LineGraphContainer","children","className","style","LineGraphScoreAndComponent","fileName","_jsxFileName","lineNumber","columnNumber","LineGraphDates","_c","div","_c2","range","size","sections","display","flexDirection","justifyContent","LineGraphScore","LineGraphComponent","_c3","_s2","canvasRef","intervals","maxScore","Math","max","incomingData","lineGraphDisplayStyle","flex","alignItems","zIndex","lineGraphStyle","canvas","current","ctx","getContext","outgoingData","index","x","clearRect","beginPath","moveTo","i","length","lineTo","strokeStyle","lineWidth","stroke","ref","_c4","scoreRangeMax","scoreRangeMin","min","scoreInterval","LineGraphScoreStyled","id","_c5","_c6","dates","checkDate","LineGraphDateStyled","_c7","_c8","$RefreshReg$"],"sources":["/Users/evelynzhang/Documents/mind-mender/my-react-app/src/LineGraph.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst LineGraph = (props) => {\n\n    // VARIABLES: Line Graph Container Properties\n    const containerHeight = 400;\n    const containerWidth = 400;\n    const datesWidth = 60;\n\n    // VARIABLES: Line Graph Mock Data\n    const [componentData, setComponentData] = useState([\n        {y: 0},\n        {y: 23},\n        {y: 5},\n        {y: 20},\n    ]);\n\n    const [datesData, setDatesData] = useState([\n        {dd: '08', mm: '04'},\n        {dd: '09', mm: '05'},\n        // {dd: '10', mm: '06'},\n        // {dd: '11', mm: '07'},\n    ]);\n    const componentSize = [(containerWidth*.85), 250]; // (x, y) or (width, height)\n    const componentSections = 4; // Number of entries.\n    const scoreRange = [0, 50]; // (Minimum Score, Maximum Score)\n\n    // REQUEST: Retrieve user's assessment history.\n    useEffect(() => {\n        const getAssessmentData = async (numOfEntriesParam, assessmentNameParam) => {\n            try {\n                const numOfEntries = numOfEntriesParam;\n                const assessmentName = assessmentNameParam;\n                const storedUserId = localStorage.getItem('userId');\n                const response = await axios.get(`http://localhost:4000/api/getArchiveScore/${storedUserId}/${numOfEntries}/${assessmentName}`);\n                const reversedData = response.data.entries.reverse();\n\n                const newScoreData = reversedData.map(entry => ({ y: entry.score }));\n                console.log(newScoreData.map(entry => entry.y));\n                setComponentData(newScoreData);\n\n                const newDatesData = reversedData.map(entry => {\n                    const [year, month, day] = entry.date.split('-');\n                    return { dd: day, mm: month };\n                  });\n                console.log(newDatesData);\n                setDatesData(newDatesData);\n\n            } catch (error) {\n                console.error(\"Error fetching or processing data:\", error);\n            }\n        };\n        getAssessmentData(4, 'happiness');\n        getAssessmentData(4, 'socialselfcare');\n\n    }, []);\n\n    // STYLE: Component background.\n    const lineGraphBackgroundStyle = {\n        position: 'absolute',\n        left: '-0%',\n        marginTop: '50px',\n        height: `${containerHeight}px`,\n        width: `${containerWidth}px`,\n        borderRadius: '25px',\n        backgroundColor: 'rgb(235,235,235)',\n    };\n\n    return (\n        <LineGraphContainer>\n            <div className=\"LineGraph-Background\" style={lineGraphBackgroundStyle}>\n                {/* SUB-COMPONENT Part 1A/B */}\n                <LineGraphScoreAndComponent scoreRange={scoreRange} componentData={componentData} componentSize={componentSize} componentSections={componentSections} datesWidth={datesWidth}/>\n                {/* SUB-COMPONENT Part 2 */}\n                <LineGraphDates datesData={datesData} datesWidth={datesWidth}/>\n            </div>\n        </LineGraphContainer>\n    );\n};\n\n// STYLE: Parent container.\nconst LineGraphContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    p {\n        user-select: none;\n        color: rgb(20,20,20);\n        z-index: 9999;\n    }\n`;\n\n// SUB-COMPONENT: Part 1 - Combines y-axis and line graph component.\nconst LineGraphScoreAndComponent = (props) => {\n\n    const range = props.scoreRange;\n    const size = props.componentSize;\n    const data = props.componentData;\n    const sections = props.componentSections;\n    const width = props.datesWidth;\n\n    return(\n        <div className=\"LineGraph-Content-Row-1\" style={{height: `${size[1]}px`, display: 'flex', flexDirection: 'row', justifyContent: 'center', marginTop: '50px'}}>\n            <LineGraphScore scoreRange={range}/>\n            <LineGraphComponent data={data} size={size} sections={sections} scoreRange={range} width={width}/>\n        </div>\n    );\n};\n\n// SUB-COMPONENT: Part 1A - Line graph component.\nconst LineGraphComponent = (props) => {\n\n    // VARIABLES: Line Graph Display Properties\n    const canvasRef = useRef(null);\n    const width = props.size[0] - props.width;\n    const height = props.size[1];\n    const sections = props.sections;\n    const intervals = width / (sections - 1);\n    const maxScore = Math.max(...props.scoreRange);\n    const incomingData = props.data;\n\n    // STYLE: Line Graph Component Stylings\n    const lineGraphDisplayStyle = {\n        flex: '0 0 85%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        backgroundColor: 'blue',\n        zIndex: '9999',\n    };\n    const lineGraphStyle = {\n        width: `${width}`,\n        // border: '1px solid #ccc',\n    };\n\n    // GRAPH: Line Graph Creation.\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n\n        var outgoingData = incomingData.map((entry, index) => ({\n            x: index * intervals,\n            y: height - (height * entry.y / maxScore),\n        }));\n\n        // const maxY = Math.max(...outgoingData.map(entry => entry.y));\n        // console.log(`Max Number: ${maxY}`);\n\n        ctx.clearRect(0, 0, width, height);\n        ctx.beginPath();\n        ctx.moveTo(outgoingData[0].x, outgoingData[0].y);\n        // console.log(`(x${0}, y${0}): (`, outgoingData[0].x, ',' ,outgoingData[0].y, ')');\n\n        for (let i = 1; i < outgoingData.length; i++) {\n            ctx.lineTo(outgoingData[i].x, outgoingData[i].y);\n            // console.log(`(x${i}, y${i}): (`, outgoingData[i].x, ',' ,outgoingData[i].y, ')');\n        }\n\n        ctx.strokeStyle = 'red';\n        ctx.lineWidth = 5;\n        ctx.stroke();\n\n        ctx.beginPath();\n        ctx.moveTo(outgoingData[0].x, outgoingData[0].y-30);\n        // console.log(`(x${0}, y${0}): (`, outgoingData[0].x, ',' ,outgoingData[0].y, ')');\n\n        for (let i = 1; i < outgoingData.length; i++) {\n            ctx.lineTo(outgoingData[i].x, outgoingData[i].y-30);\n            // console.log(`(x${i}, y${i}): (`, outgoingData[i].x, ',' ,outgoingData[i].y, ')');\n        }\n\n        ctx.strokeStyle = 'green';\n        ctx.lineWidth = 5;\n        ctx.stroke();\n    }, [width, height, intervals, incomingData]);\n\n    return (\n        <div className=\"LineGraph-Display\" style={lineGraphDisplayStyle}>\n            <canvas ref={canvasRef} width={width} height={height} style={lineGraphStyle} />\n        </div>\n    );\n};\n\n// SUB-COMPONENT: Part 1B - The y-axis.\nconst LineGraphScore = (props) => {\n\n    const scoreRange = props.scoreRange;\n    const scoreRangeMax = Math.max(...scoreRange);\n    const scoreRangeMin = Math.min(...scoreRange);\n    const scoreInterval = (scoreRangeMax-scoreRangeMin)/5\n\n    return (\n        <LineGraphScoreStyled>\n            <p id='LineGraphScoreTop'>{scoreRangeMax}</p>\n            <p>{scoreInterval*4}</p>\n            <p>{scoreInterval*3}</p>\n            <p>{scoreInterval*2}</p>\n            <p>{scoreInterval*1}</p>\n            <p id='LineGraphScoreBottom'>{scoreRangeMin}</p>\n        </LineGraphScoreStyled>\n    );\n};\n\n// STYLE: Part 1B - The y-axis stylings.\nconst LineGraphScoreStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 0 0 10%;\n    justify-content: space-between;\n    background-color: pink;\n    p {\n        font-size: 10pt;\n        text-align: right;\n        margin: 0px;\n        /* background-color: yellow; */\n    }\n`;\n\n// SUB-COMPONENT: Part 2 - The x-axis.\nconst LineGraphDates = (props) => {\n\n    const dates = props.datesData;\n    const width = props.datesWidth;\n\n    const checkDate = (index) => !!dates[index];\n\n    return (\n        <div className=\"LineGraph-Content-Row-2\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'center' }}>\n            <LineGraphDateStyled datesWidth={width}>\n                <p>{ checkDate(0) ? `${ dates[0].dd }/${ dates[0].mm }` : 'MM/DD' }</p>\n                <p>{ checkDate(1) ? `${ dates[1].dd }/${ dates[1].mm }` : 'MM/DD' }</p>\n                <p>{ checkDate(2) ? `${ dates[2].dd }/${ dates[2].mm }` : 'MM/DD' }</p>\n                <p>{ checkDate(3) ? `${ dates[3].dd }/${ dates[3].mm }` : 'MM/DD' }</p>\n            </LineGraphDateStyled>\n            <div style={{ flex: '0 0 2.5%'}}/>\n        </div>\n    );\n};\n\n//STYLE: Part 2 - The x-axis stylings.\nconst LineGraphDateStyled = styled.div`\n    flex: 0 0 85%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin-left: auto;\n    /* background-color: orange; */\n    p {\n        text-align: center;\n        font-size: 10pt;\n        width: ${(props) => props.datesWidth}px;\n        margin: 0px;\n        margin-top: 25px;\n        background-color: red;\n        transform: rotate(-0deg);\n    }\n`;\n\nexport default LineGraph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}